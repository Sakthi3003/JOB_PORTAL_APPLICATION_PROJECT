spring.application.name=jobms

server.port=8898

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=sahi3003
spring.datasource.password=Sahi@3003

# JPA Configuration
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect



##h2 configuration
#
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

#eureka

#Url mentioning
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/


# this project is a eureka server so it need not register itself
eureka.client.register-with-eureka=true

# this project is already present need not fetch from anywhere
eureka.client.fetch-registry=true

# Zipkin
# this command 100% of the requests will be traced and sent to Zipkin. 0.1 means 10%
management.tracing.sampling.probability=1.0

#Actuator

# Expose both health and circuitbreaker endpoints
management.endpoints.web.exposure.include=health,circuitbreakers

# Show health details
management.endpoint.health.show-details=always

# Enable circuitbreaker health info
management.health.circuitbreakers.enabled=true



# Resilience4j
resilience4j.circuitbreaker.instances.CompanyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.CompanyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.CompanyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.CompanyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.CompanyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.CompanyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.CompanyBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.CompanyBreaker.slidingWindowType=COUNT_BASED


# retry mechanism
#resilience4j.circuitbreaker.instances.CompanyBreaker.max-attempts=5
#resilience4j.circuitbreaker.instances.CompanyBreaker.wait-duration=2s

resilience4j.retry.instances.companyRetry.max-attempts=5
resilience4j.retry.instances.companyRetry.wait-duration=2s


#rate limiter 
resilience4j.ratelimiter.instance.companyBreaker.timeout-duration=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2

